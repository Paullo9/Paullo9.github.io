{"kind":"Notebook","sha256":"c8d6f5b742396f7c3f1eafddb2a731fc4a7806f61a164687ee405aef67068af7","slug":"notebook","location":"/02-notebook.ipynb","dependencies":[],"frontmatter":{"title":"Linking Interactive Notebooks","subtitle":"Evolve markdown documents and notebooks into structured data","authors":[{"nameParsed":{"literal":"Rowan Cockett","given":"Rowan","family":"Cockett"},"name":"Rowan Cockett","orcid":"0000-0002-7859-8394","email":"rowan@curvenote.com","affiliations":["Executable Books","Curvenote"],"id":"contributors-02-notebook-generated-uid-0","corresponding":true}],"affiliations":[{"id":"Executable Books","name":"Executable Books"},{"id":"Curvenote","name":"Curvenote"}],"date":"2023-01-23","license":{"code":{"id":"MIT","name":"MIT License","osi":true,"free":true,"url":"https://opensource.org/licenses/MIT"}},"kernelspec":{"name":"python3","display_name":"Python 3 (ipykernel)","language":"python"},"github":"https://github.com/jupyter-book/mystmd-quickstart","exports":[{"format":"ipynb","filename":"02-notebook.ipynb","url":"/02-notebook-2d2be3e502897f07da0da69127434822.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","children":[{"type":"paragraph","position":{"start":{"line":14,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"MyST allows you to directly include Jupyter Notebooks in your books, documents and websites.\nThis Jupyter Notebook can be rendered directly using MyST.","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"F6O6uaCG1T"}],"key":"MznSA9XP7u"},{"type":"paragraph","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"children":[{"type":"text","value":"For example, let us import ","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"LbIq1lZwMo"},{"type":"inlineCode","value":"altair","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"GlKdJQnk7u"},{"type":"text","value":" and create a demo of an interactive plot!","position":{"start":{"line":17,"column":1},"end":{"line":17,"column":1}},"key":"qpIPJApGVB"}],"key":"JoZiDpLwFu"}],"key":"idyAaDXkzt"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"import altair as alt\nfrom vega_datasets import data\n\nsource = data.cars()\nbrush = alt.selection_interval(encodings=['x'])\npoints = alt.Chart(source).mark_point().encode(\n    x='Horsepower:Q',\n    y='Miles_per_Gallon:Q',\n    size='Acceleration',\n    color=alt.condition(brush, 'Origin:N', alt.value('lightgray'))\n).add_selection(brush)\n\nbars = alt.Chart(source).mark_bar().encode(\n    y='Origin:N',\n    color='Origin:N',\n    x='count(Origin):Q'\n).transform_filter(brush)","key":"RZ9WfDpHpc"},{"type":"output","id":"01DdALHdhL8V2xiZbob_D","data":[],"key":"qbjT5N4jUx"}],"key":"tZWIbQHLTK"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"We can now plot the altair example, which is fully interactive, try dragging in the plot to select cars by their horsepower.","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"L0OoXTpqhy"}],"key":"aQZesY3z9S"}],"key":"vo3KaxNr6k"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"points & bars","identifier":"horsepower-code","enumerator":"1","html_id":"horsepower-code","key":"trUfousN6U"},{"type":"output","id":"5yvB90bt94MjHS65bSXnE","data":[{"output_type":"execute_result","execution_count":2,"metadata":{},"data":{"text/html":{"content_type":"text/html","hash":"5f0ed71e44f5315dea7c7cbda2fb25ce","path":"/5f0ed71e44f5315dea7c7cbda2fb25ce.html"},"text/plain":{"content":"alt.VConcatChart(...)","content_type":"text/plain"}}}],"identifier":"horsepower-output","html_id":"horsepower-output","key":"F8ROSij1Mv"}],"identifier":"horsepower","label":"horsepower","html_id":"horsepower","key":"drdON28sQe"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# https://matplotlib.org/stable/gallery/statistics/time_series_histogram.html#sphx-glr-gallery-statistics-time-series-histogram-py\nfrom copy import copy\n\nimport numpy as np\nimport numpy.matlib\nimport matplotlib.pyplot as plt\nfrom matplotlib.colors import LogNorm","key":"khHH44qXuy"},{"type":"output","id":"_7gP-h9RvnLUssLN8pwkF","data":[],"key":"fJiXYqkAvt"}],"key":"QtyZkGW6aa"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"# Make some data; a 1D random walk + small fraction of sine waves\nnum_series = 1000\nnum_points = 100\nSNR = 0.10  # Signal to Noise Ratio\nx = np.linspace(0, 4 * np.pi, num_points)\n# Generate unbiased Gaussian random walks\nY = np.cumsum(np.random.randn(num_series, num_points), axis=-1)\n# Generate sinusoidal signals\nnum_signal = int(round(SNR * num_series))\nphi = (np.pi / 8) * np.random.randn(num_signal, 1)  # small random offset\nY[-num_signal:] = (\n    np.sqrt(np.arange(num_points))[None, :]  # random walk RMS scaling factor\n    * (np.sin(x[None, :] - phi)\n       + 0.05 * np.random.randn(num_signal, num_points))  # small random noise\n)\n\n\n# Now we will convert the multiple time series into a histogram. Not only will\n# the hidden signal be more visible, but it is also a much quicker procedure.\n# Linearly interpolate between the points in each time series\nnum_fine = 800\nx_fine = np.linspace(x.min(), x.max(), num_fine)\ny_fine = np.empty((num_series, num_fine), dtype=float)\nfor i in range(num_series):\n    y_fine[i, :] = np.interp(x_fine, x, Y[i, :])\ny_fine = y_fine.flatten()\nx_fine = np.matlib.repmat(x_fine, num_series, 1).flatten()","key":"dra045ikOB"},{"type":"output","id":"i0ZgdRi2CCHSmM9ev3swx","data":[],"key":"GopUjVjMLc"}],"key":"npYnfE2P9W"},{"type":"block","kind":"notebook-content","data":{},"children":[{"type":"paragraph","position":{"start":{"line":1,"column":1},"end":{"line":2,"column":1}},"children":[{"type":"text","value":"Important!\nThis data is simulated, and may just be random noise! ðŸ”Š","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"NMrHkLwhLc"}],"key":"Pp7jQXC7LK"}],"key":"mJZg898ywJ"},{"type":"block","kind":"notebook-code","data":{},"children":[{"type":"code","lang":"python","executable":true,"value":"fig, axes = plt.subplots(figsize=(8, 4), constrained_layout=True)\ncmap = copy(plt.cm.plasma)\ncmap.set_bad(cmap(0))\nh, xedges, yedges = np.histogram2d(x_fine, y_fine, bins=[400, 100])\npcm = axes.pcolormesh(xedges, yedges, h.T, cmap=cmap,\n                         norm=LogNorm(vmax=1.5e2), rasterized=True)\nfig.colorbar(pcm, ax=axes, label=\"# points\", pad=0)\naxes.set_title(\"2d histogram and log color scale\");","identifier":"plasma-code","enumerator":"2","html_id":"plasma-code","key":"jBu2JOyxrT"},{"type":"output","id":"OFUiTfBtZGZQGId_bYOxb","data":[{"output_type":"display_data","metadata":{"needs_background":"light"},"data":{"image/png":{"content_type":"image/png","hash":"7117d0905b8901689b9758271e532eb2","path":"/7117d0905b8901689b9758271e532eb2.png"},"text/plain":{"content":"<Figure size 576x288 with 2 Axes>","content_type":"text/plain"}}}],"identifier":"plasma-output","html_id":"plasma-output","key":"eDGRJFuBQA"}],"identifier":"plasma","label":"plasma","html_id":"plasma","key":"OdAaU5W5EV"}],"key":"kS8rDSkV6U"},"references":{"cite":{"order":[],"data":{}}}}